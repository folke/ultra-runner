name: Node CI

on: [push]

jobs:
  build:
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} on {{ matrix.os }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: yarn
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test --coverage --coverageProvider v8
      - name: Build
        run: yarn build:ts
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel: true
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
  # release:
  #   needs: build
  #   name: Release
  #   runs-on: ubuntu-latest
  #   env:
  #     CI: true
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #     - name: Get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: Install dependencies
  #       run: yarn
  #     - name: Release
  #       run: npx semantic-release
